source('~/360云盘/Documents/ML/R/Classification/Driver.R')
preprocessDataSets <- preprocessData()
ll <- list()
ll$a <- newData
data<-DataSets[1]
ll$a <- data
ll$b <- data
preprocessDataSets <- preprocessData()
View(data)
DataSets[1]
heart = read.table(file = "data/heart-disease/processed.cleveland.data", header = FALSE, sep = ",")
names(heart)
names(DataSets)
names(DataSets[1])
names(DataSets[2])
for (data in DataSets) {names(data)}
for (data in DataSets) {names(data)}
for (data in DataSets) {print(names(data))}
names(DataSets[[1]])
DataSets.length
count(DataSets)
names(DataSets[1])
debugSource('~/360云盘/Documents/ML/R/Classification/Driver.R')
preprocessDataSets <- preprocessData()
source('~/360云盘/Documents/ML/R/Classification/Driver.R')
preprocessDataSets <- preprocessData()
preprocessDataSets
preprocessDataSets[1]
preprocessDataSets <- preprocessData()
preprocessDataSets
preprocessDataSets[1]
ll <- list()
a <- "adult"
ll[a] < 1:3
ll[a] <- 1:3
ll
m = matrix(1:6, 2, 3)
m
ll[a] <- m
ll
ll[0] <- m
ll
ll[[2]] <- m
ll
debugSource('~/360云盘/Documents/ML/R/Classification/Driver.R')
b <- 2
ll[[b]] <- 3:4
ll
source('~/360云盘/Documents/ML/R/Classification/Driver.R')
preprocessDataSets <- preprocessData()
d1 <- DataSets[2]
d2 <- preprocessDataSets[2]
d1 <- DataSets[[2]]
d2 <- preprocessDataSets[[2]]
View(`d1`)
View(`d2`)
View(`d2`)
exec()
source('~/360云盘/Documents/ML/R/Classification/Driver.R')
ll <- list()
ll[[2]] < 1:3
ll
ll[[1]] < 1:3
ll
ll[[0]] < 1:3
ll[0] < 1:3
ll[[2]] <- 1:3
ll
ll <- list()
ll
ll[[2]] <- 1:3
ll
source('~/360云盘/Documents/ML/R/Classification/Driver.R')
preprocessDataSets <- preprocessData()
data <- preprocessDataSets[[1]]
index <- sample(1 : nrow(data), round(0.8 * nrow(data)))
trainingData = data[index, ]    # create training data
testData = data[-index, ]       # create test data
algo <- "neuralNet.R"
remove(createModel)
remove(findAccuracy)
source(algo)
model <- createModel(trainingData)
predictResult <- prediction(model, testData)
predictResult <- predict(model, testData)
predictResult <- compute(model, testData)
plot(model)
model$result.matrix
source('~/360云盘/Documents/ML/R/Classification/Driver.R')
predictResult <- compute(model, testData)
View(trainingData)
View(testData)
source('~/360云盘/Documents/ML/R/Classification/Driver.R')
View(testData)
source('~/360云盘/Documents/ML/R/Classification/Driver.R')
source('~/360云盘/Documents/ML/R/Classification/Driver.R')
source('~/360云盘/Documents/ML/R/Classification/Driver.R')
source('~/360云盘/Documents/ML/R/Classification/Driver.R')
DataSets <- list(
adult = read.table(file = "data/adult/adult.data", header = FALSE, sep = ","),
# wine = read.table(file = "data/wine/wine.data", header = FALSE, sep = ","),
car = read.table(file = "data/car/car.data", header = FALSE, sep = ","),
heart = read.table(file = "data/heart-disease/processed.cleveland.data", header = FALSE, sep = ","),
ads = read.table(file = "data/internet_ads/ad.data", header = FALSE, sep = ",")
)
Algorithms <- list(
"decisionTree.R",
# "perceptron.R",
"neuralNet.R"
#"SVM.R",
#"naiveBayes.R"
)
preprocessData <- function()
{
preprocessDataSets <- list()
for (index in 1 : length(DataSets))
{
data <- DataSets[[index]]
col = ncol(data)
newData <- 0
for (j in 1 : col)
{
if (is.factor(data[[j]]))
{
# print ("is Factor")
oneColumn <- as.numeric(data[[j]])
}
else
{
oneColumn <- data[j]
}
newData <- cbind(newData, oneColumn)
}
newData <- newData[, -1]
colnames(newData) <- colnames(data)
#preprocessDataSets <- c(preprocessDataSets, newData)
#name <- names(DataSets[index])
preprocessDataSets[[index]] <- newData
}
preprocessDataSets
}
exec <- function()
{
preprocessDataSets <- preprocessData()
resultMatrix <- NULL
for (data in preprocessDataSets)
{
#data <- preprocessDataSets[[1]]
index <- sample(1 : nrow(data), round(0.8 * nrow(data)))
trainingData = data[index, ]    # create training data
testData = data[-index, ]       # create test data
accuracyList <- NULL
for (algo in Algorithms)
{
remove(createModel)
remove(findAccuracy)
source(algo)
model <- createModel(trainingData)
accuracy <- findAccuracy(model, testData)
accuracyList <- c(accuracyList, accuracy)
}
resultMatrix <- cbind(resultMatrix, accuracyList)
}
resultMatrix
}
exec()
paste(1,"~",2)
source('~/360云盘/Documents/ML/R/Classification/Driver.R')
source('~/360云盘/Documents/ML/R/Classification/Driver.R')
source('~/360云盘/Documents/ML/R/Classification/Driver.R')
source('~/360云盘/Documents/ML/R/Classification/Driver.R')
source('~/360云盘/Documents/ML/R/Classification/Driver.R')
source('~/360云盘/Documents/ML/R/Classification/Driver.R')
